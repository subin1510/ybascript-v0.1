local farmCandy = false

local targetGameId = 2809202155   -- ID game YBA
local currentGameId = 1601192056  -- ID game hiện tại (hoặc ID game ban đầu)
local maxWaitTime = 60  -- Maximum time to wait for LoadingScreen1 to be removed (in seconds)
local teleportInterval1 = 5  -- Time interval between teleport attempts (in seconds)

local TPS = game:GetService("TeleportService")
local player = game.Players.LocalPlayer

-- Kiểm tra và dịch chuyển nếu cần
local function checkAndTeleport()
    -- Kiểm tra nếu player không ở game YBA (PlaceId)
    if game.PlaceId ~= targetGameId then
        -- Nếu không ở game YBA, teleport đến game đó
        TPS:Teleport(targetGameId, player)
    end
end

-- Đảm bảo script này luôn kiểm tra mỗi frame
game:GetService("RunService").Heartbeat:Connect(function()
    checkAndTeleport()
end)

-- Wait for the game to load
repeat
    wait()
until game:IsLoaded()

-- Check LoadingScreen1 removal or timeout
local startTime = tick()
repeat
    wait()
    if game.Players.LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") == nil then
function GetCharacter()
    local player = GetPlayer()
    return player and (player.Character or player.CharacterAdded:Wait())
end
function GetPlayer()
    return game:GetService("Players").LocalPlayer
end
-- deletes loading shit
if not GetPlayer().PlayerGui:FindFirstChild("HUD") then
    local HUD = game:GetService("ReplicatedStorage").Objects.HUD:Clone()
    HUD.Parent = GetPlayer().PlayerGui
end

GetCharacter():WaitForChild("RemoteEvent"):FireServer("PressedPlay")

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
end)   

task.wait(.5)

pcall(function()
    GetPlayer().PlayerGui:FindFirstChild("LoadingScreen"):Destroy()
end)

pcall(function()
    workspace.LoadingScreen.Song.Playing = false
end)

pcall(function()
    for i,v in pairs(game.Lighting:GetChildren()) do
        if v.Name == "DepthOfField" then
            v.Enabled = false
        end
    end
end)
        break
    end
until tick() - startTime >= maxWaitTime

-- If LoadingScreen1 is still there after the timeout, teleport to another server (infinite loop)
if game.Players.LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") ~= nil then
    print("Timeout reached. Starting teleport attempts...")

    -- Infinite loop to attempt teleportation every 5 seconds
    while true do
        game:GetService("TeleportService"):Teleport(currentGameId)
        print("Teleport attempt made at " .. tick())
        wait(teleportInterval1)  -- Wait for the next teleport attempt
    end
end


-- Lấy đối tượng người chơi và các thành phần cần thiết
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")



-- Tạo khối object sẽ xuất hiện dưới chân người chơi
local floatingPlatform = Instance.new("Part")
floatingPlatform.Size = Vector3.new(3, 0.01, 3)  -- Kích thước của platform (tùy chỉnh)
floatingPlatform.Anchored = true  -- Đảm bảo object cố định ở vị trí
floatingPlatform.CanCollide = true  -- Để người chơi có thể đứng trên đó
floatingPlatform.Transparency = 0  -- Làm cho khối này hiển thị (0 là hoàn toàn không trong suốt)
floatingPlatform.Material = Enum.Material.SmoothPlastic
floatingPlatform.Color = Color3.fromRGB(255, 255, 255)  -- Màu sắc của platform (có thể thay đổi)
floatingPlatform.Position = rootPart.Position - Vector3.new(0, 3.05, 0)  -- Đặt phía dưới chân người chơi
floatingPlatform.Parent = game.Workspace  -- Thêm khối vào Workspace

-- Đảm bảo đối tượng không bị tác động bởi trọng lực
floatingPlatform.AssemblyLinearVelocity = Vector3.zero
floatingPlatform.AssemblyAngularVelocity = Vector3.zero

-- Cập nhật vị trí của khối platform theo người chơi
function updatePlatformPosition()
    floatingPlatform.Position = rootPart.Position - Vector3.new(0, 3.025, 0)
end

-- Liên tục cập nhật vị trí của platform để nó luôn di chuyển theo người chơi
game:GetService("RunService").Heartbeat:Connect(function()
    updatePlatformPosition()
end)


-- No Clip Script (only enables No Clipping)
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Disable collision for all parts of the character
for _, part in pairs(character:GetChildren()) do
    if part:IsA("BasePart") then
        part.CanCollide = false
    end
end

-- Continuously disable collision for all parts of the character (in case parts get re-parented)
game:GetService("RunService").Heartbeat:Connect(function()
    for _, part in pairs(character:GetChildren()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end)



---------- up is noclip and float / esp





local positions = {
    Vector3.new(5, -17, -786),
    Vector3.new(5, -17, -786),
    Vector3.new(599, 0, -70),
    Vector3.new(910, 34, -126),
    Vector3.new(954, 34, -13),
    Vector3.new(1147, 117, -115),
    Vector3.new(536, 0, -62),
    Vector3.new(560, 7, 121),
    Vector3.new(465, 0, 132),
    Vector3.new(459, 0, 39),
    Vector3.new(364, 0, -20),
    Vector3.new(285, 0, 62),
    Vector3.new(194, 0, 3),
    Vector3.new(129, 6, 75),
    Vector3.new(186, 0, 139),
    Vector3.new(294, 0, 204),
    Vector3.new(269, -26, 308),
    Vector3.new(266, -26, 423),
    Vector3.new(265, -26, 499),
    Vector3.new(235, -26, 554),
    Vector3.new(13, -26, 554),
    Vector3.new(54, -14, 460),
    Vector3.new(120, -18, 298),
    Vector3.new(-51, -19, 447),
    Vector3.new(-48, -4, 295),
    Vector3.new(-22, 0, 118),
    Vector3.new(-16, 0, 20),
    Vector3.new(-103, 0, 1),
    Vector3.new(-112, 0, 143),
    Vector3.new(-222, 0, 13),
    Vector3.new(-316, 0, 19),
    Vector3.new(-265, -6, 121),
    Vector3.new(-265, -5, -112),
    Vector3.new(-267, -31, -561),
    Vector3.new(-270, -31, -338),
    Vector3.new(-429, 0, 95),
    Vector3.new(-430, 0, -74),
    Vector3.new(-343, 0, -142),
    Vector3.new(-425, 0, -232),
    Vector3.new(-435, 0, -386),
    Vector3.new(-598, -26, -319),
    Vector3.new(-598, -26, -184),
    Vector3.new(-534, -26, -176),
    Vector3.new(-579, -26, -125),
    Vector3.new(-759, -26, -166),
    Vector3.new(-753, -26, -350),
    Vector3.new(-674, -26, -428),
    Vector3.new(-544, -26, -573),
    Vector3.new(-584, -26, -499),
    Vector3.new(-766, -26, -558),
    Vector3.new(-620, -26, -694),
    Vector3.new(-570, 10, -791),
    Vector3.new(-370, 0, -787),
    Vector3.new(-392, 0, -722),
    Vector3.new(-444, 0, -612),
    Vector3.new(-310, 0, -476),
    Vector3.new(-400, 0, -488),
    Vector3.new(-360, 0, -546),
    Vector3.new(-192, 0, -640),
    Vector3.new(-306, 0, -634),
    Vector3.new(-192, 0, -640),
    Vector3.new(-135, 0, -601),
    Vector3.new(-65, 0, -644),
    Vector3.new(42, 0, -652),
    Vector3.new(40, 0, -904),
    Vector3.new(181, 0, -648),
    Vector3.new(188, 0, -568),
    Vector3.new(192, 0, -438),
    Vector3.new(-18, 0, -319),
    Vector3.new(53, 0, -355),
    Vector3.new(-65, 0, -384),
    Vector3.new(-151, 0, -290),
    Vector3.new(-173, 0, -406),
    Vector3.new(-159, 0, -474),
    Vector3.new(-272, 0, -449),
    Vector3.new(-188, 0, -144),
    Vector3.new(-93, 0, -101),
    Vector3.new(83, 0, -115),
    Vector3.new(97, 0, -177),
    Vector3.new(194, 0, -150),
    Vector3.new(306, 0, -213),
    Vector3.new(256, 5, -241),
    Vector3.new(448, 31, -283),
    Vector3.new(580, 0, -308),
    Vector3.new(538, -3, -431),
    Vector3.new(439, 0, -432),
    Vector3.new(416, 0, -407),
    Vector3.new(205, -34, -255),
    Vector3.new(-25, -34, -386),
    Vector3.new(398, -34, -257),
    Vector3.new(124, -34, -395),
    Vector3.new(-175, -34, -447),
    Vector3.new(-112, -34, -309),
    Vector3.new(93, -34, -85),
    Vector3.new(212, -34, 42),
    Vector3.new(323, -34, -97),
    Vector3.new(177, -34, -181),
    Vector3.new(324, -32, -197),
    Vector3.new(393, -32, -172),
    Vector3.new(-115, -34, -65),
    Vector3.new(-192, -34, -81),
    Vector3.new(-402, -34, -77)
}


local currentIndex = 1
local countdown = 9.30  -- Thời gian đếm ngược bắt đầu từ 9.30 giây

local function teleportToPosition(position)
    local player = game.Players.LocalPlayer
    if player and player.Character then
        local char = player.Character
        local humanoidRootPart = char:WaitForChild("HumanoidRootPart")
        humanoidRootPart.CFrame = CFrame.new(position)
    end
end

getgenv().farmitems = {
    -- items to farm and sell
    ["Rokakaka"] = true,
    ["Pure Rokakaka"] = true,
    ["Diamond"] = true,
    ["Dio's Diary"] = true,
    ["Steel Ball"] = true,
    ["Rib Cage of The Saint's Corpse"] = true,
    ["Stone Mask"] = true,
    ["Gold Coin"] = true,
    ["Quinton's Glove"] = true,
    ["Ancient Scroll"] = true,
    ["Caesar's Headband"] = true,
    ["Mysterious Arrow"] = true,
    ["Zeppeli's Hat"] = true,
    ["Clackers"] = true
}

function GetPlayer()
    return game:GetService("Players").LocalPlayer
end

function GetCharacter()
    local player = GetPlayer()
    return player and (player.Character or player.CharacterAdded:Wait())
end

local SelectedItems = {}
for itemName, canSell in pairs(getgenv().farmitems) do
    if canSell then
        table.insert(SelectedItems, itemName)
    end
end

local function SellItems()
    local Player = GetPlayer()
    local Character = GetCharacter()

    if not Character then return end -- Ensure Character exists
    local Humanoid = Character:FindFirstChild("Humanoid")
    if not Humanoid then return end -- Ensure Humanoid exists

    -- Iterate over selected items and sell
    for _, itemName in ipairs(SelectedItems) do
        local Tool = Player.Backpack:FindFirstChild(itemName)
        if Tool then
            -- Equip the tool if found in the backpack
            Humanoid:EquipTool(Tool)
            
            -- Find RemoteEvent in the character to sell items
            local RemoteEvent = Character:FindFirstChild("RemoteEvent")
            if RemoteEvent then
                RemoteEvent:FireServer("EndDialogue", {NPC = "Merchant", Option = "Option1", Dialogue = "Dialogue5"})
            else
                warn("RemoteEvent not found in Character!")
            end
        end
    end
end

local function teleportSequentially()
    if currentIndex <= #positions then
        -- Cập nhật thời gian đếm ngược
        countdown = countdown - 0.15
        print("Teleporting to: " .. tostring(positions[currentIndex]))  -- In ra vị trí teleport
        print("Wait while teleport: " .. string.format("%.2f", countdown))  -- In thời gian còn lại

        -- Teleport đến vị trí hiện tại
        teleportToPosition(positions[currentIndex])
        currentIndex = currentIndex + 1
        wait(0)  -- Chờ 0.15 giây trước khi teleport tới vị trí tiếp theo

        teleportSequentially()  -- Tiếp tục teleport tới vị trí tiếp theo
    else
        -- Sau khi teleport xong, khôi phục lại trạng thái
        print("Teleport complete!")
        
        -- Đặt lại trạng thái sau khi hoàn thành
        currentIndex = 1  -- Đặt lại index về 1
        countdown = 9.30  -- Đặt lại countdown về giá trị ban đầu
    end
end



local function QLMOT_fake_script() -- ScreenGui.LocalScript 
    local script = Instance.new('LocalScript', ScreenGui)

    local function travelTo(place) -- Does the math and teleports you in chunks to bypass tp anticheat
        local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
        local vector = place.Position - plr.Position
        local length = vector.Magnitude
        local num_tp = math.ceil(length / 10000)
    
        plr.CFrame = plr.CFrame + vector / num_tp
    end


local function buyarrow()
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    local teleportService = game:GetService("TeleportService")
    local gameId = 1601192056  -- ID of the server to teleport to

    -- Check if the player has a Backpack
    if not backpack then
        print("No backpack")
        return
    end

    -- Check if the player's money is greater than or equal to 50,000
    local money = player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Money")
    if not money then
        print("Money stat not found.")
        return
    end

    -- Wait until the player's money reaches at least 50,000
    while money.Value < 50000 do
        wait(1)  -- Check every second if the money has increased
    end

    -- After reaching 50,000 or more money, proceed with buying the Lucky Arrow
    print("Enough money, proceeding to buy Lucky Arrow...")

    -- Count the number of "Lucky Arrow" in the player's backpack
    local arrowcount = 0
    for _, item in ipairs(backpack:GetChildren()) do
        if item.Name == "Lucky Arrow" then
            arrowcount = arrowcount + 1
        end
    end

    if arrowcount >= 9 then
        -- Look for "Lucky Arrow" in the "Item_Spawns.Items"
        local itemsFolder = workspace:FindFirstChild("Item_Spawns") and workspace.Item_Spawns:FindFirstChild("Items")
        if itemsFolder then
            for _, model in ipairs(itemsFolder:GetChildren()) do
                if model:IsA("Model") then
                    local proximityPrompt = model:FindFirstChildOfClass("ProximityPrompt")
                    if proximityPrompt and proximityPrompt.ObjectText == "Lucky Arrow" then
                        -- Found the Lucky Arrow, teleporting to the new server
                        print("Found Lucky Arrow, teleporting to new server...")
                        teleportService:Teleport(gameId, player)
                        return
                    end
                end
            end
        else
            print("No items folder found.")
        end
    else
        -- If there are not enough Lucky Arrows, buy one
        player.Character.RemoteEvent:FireServer("PurchaseShopItem", {["ItemName"] = "1x Lucky Arrow"})
        print("Bought Lucky Arrow")
    end
end

while true do


    -- Now check for enough money and buy a Lucky Arrow
    buyarrow()

    -- Wait 0.5 seconds before repeating
    wait(0.5)
end

    local tpOn = false
    local sell = false

function mainTP() -- Finds the item
    while tpOn == true do -- Correct the assignment error (use == for comparison)
        maxItems() -- Checks if I have max items before starting
        for _, v in pairs(game.Workspace.Item_Spawns.Items:GetChildren()) do
            -- Kiểm tra nếu item là Model
            if v:IsA("Model") then
                -- Kiểm tra nếu Model có chứa "Part" nào không
                for _, part in pairs(v:GetChildren()) do
                    if part:IsA("Part") then
                        -- Kiểm tra các đối tượng con của Part (PointLight, SurfaceAppearance)
                        local checkNames = {"PointLight", "SurfaceAppearance"}
                        for _, name in ipairs(checkNames) do
                            if part:FindFirstChild(name) then
                                -- Kiểm tra ProximityPrompt trong Part
                                local proxPrompt = v:FindFirstChild("ProximityPrompt")
                                if proxPrompt then
                                    -- Kiểm tra ObjectText trong ProximityPrompt để xác định món đồ
                                    local Itemsname2 = proxPrompt.ObjectText
                                    if Itemsname2 and not isCandy(Itemsname2) then  -- Skip candy if farmCandy is false
                                        while part:IsDescendantOf(game.Workspace) and tpOn do
                                            local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
                                            travelTo(part)
                                            if (part.Position - plr.Position).Magnitude < 5 then
                                                maxItems()
						task.wait(0.3)
                                                fireproximityprompt(proxPrompt, 4)
                                            end
                                            task.wait(0.05)
                                        end
                                    end
                                end
                                break  -- Nếu đã teleport đến Part, thoát khỏi vòng lặp kiểm tra
                            end
                        end
                    end
                end

                local meshParts = v:GetChildren()  -- Lấy tất cả các con của đối tượng v
                for _, child in ipairs(meshParts) do
                    if child:IsA("MeshPart") then  -- Kiểm tra nếu đối tượng con là MeshPart
                        -- Kiểm tra các đối tượng con trong MeshPart (PointLight, SurfaceAppearance, SpawnedItemWisps, ManualWeld)
                        local checkNames = {"PointLight"}
                        for _, name in ipairs(checkNames) do
                            if child:FindFirstChild(name) then  -- Nếu tìm thấy đối tượng con cần kiểm tra
                                local proxPrompt = v:FindFirstChild("ProximityPrompt")  -- Lấy ProximityPrompt từ Model
                                if proxPrompt then
                                    -- Kiểm tra ObjectText trong ProximityPrompt để xác định món đồ
                                    local Itemsname2 = proxPrompt.ObjectText
                                    if Itemsname2 and (farmCandy or not isCandy(Itemsname2)) then  -- If farmCandy is true, or it's not candy
                                        while child:IsDescendantOf(game.Workspace) and tpOn do
                                            local plr = game.Players.LocalPlayer.Character.HumanoidRootPart
                                            travelTo(child)  -- Di chuyển đến vị trí của MeshPart
                                            if (child.Position - plr.Position).Magnitude < 5 then  -- Kiểm tra khoảng cách
                                                maxItems()  -- Gọi hàm maxItems()
						task.wait(0.3)
                                                fireproximityprompt(proxPrompt, 4)  -- Kích hoạt proximity prompt
                                            end
                                            task.wait(0.05)  -- Chờ một khoảng thời gian trước khi tiếp tục
                                        end
                                    end
                                    break  -- Dừng vòng lặp kiểm tra sau khi tìm thấy và teleport
                                end
                            end
                        end
                    end
                end
            end
        end
        task.wait(0.05) -- Delay to prevent CPU overload
    end
end

-- Function to check if the item is a candy
function isCandy(Itemsname2)
    local candyTypes = {"Blue Candy", "Yellow Candy", "Red Candy", "Green Candy"}
    for _, candy in ipairs(candyTypes) do
        if Itemsname2 == candy then
            return true
        end
    end
    return false
end


    function maxItems()
        items = {
            ["Mysterious Arrow"] = 0,
            ["Rokakaka"] = 0,
            ["Gold Coin"] = 0,
            ["Diamond"] = 0,
            ["Pure Rokakaka"] = 0,
            ["Quinton's Glove"] = 0,
            ["Steel Ball"] = 0,
            ["Rib Cage of The Saint's Corpse"] = 0,
            ["Zepellin's Headband"] = 0,
            ["Zeppeli's Hat"] = 0,
            ["Caesar's Headband"] = 0,
            ["Clackers"] = 0,
            ["Stone Mask"] = 0,
            ["Ancient Scroll"] = 0,
            ["Dio's Diary"] = 0,
            ["Pure Rokakaka"] = 0,
            ["Lucky Stone Mask"] = 0,
            ["Gold Umbrella"] = 0
        }

        local maxLimits = {  -- Add to the list if I missed an item
            ["Mysterious Arrow"] = 25,
            ["Rokakaka"] = 25,
            ["Gold Coin"] = 45,
            ["Diamond"] = 25,
            ["Pure Rokakaka"] = 10,
            ["Quinton's Glove"] = 10,
            ["Steel Ball"] = 10,
            ["Rib Cage of The Saint's Corpse"] = 10,
            ["Zepellin's Headband"] = 10,
            ["Zeppeli's Hat"] = 10,
            ["Caesar's Headband"] = 10,
            ["Clackers"] = 10,
            ["Stone Mask"] = 10,
            ["Ancient Scroll"] = 10,
            ["Dio's Diary"] = 10,			
            ["Lucky Stone Mask"] = 999,
            ["Lucky Arrow"] = 999,
            ["Gold Umbrella"] = 999,
            ["Left Arm of The Saint's Corpse"] = 999,
            ["Heart of The Saint's Corpse"] = 999,
            ["Pelvis of The Saint's Corpse"] = 999
        }

        for _, item in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            if items[item.Name] then
                items[item.Name] = items[item.Name] + 1
                if (items[item.Name] >= (maxLimits[item.Name] or 25)) and sell then
                    sellItem(item)
                end
            end
        end
    end

    function sellItem(item)
        local plrName = game.Players.LocalPlayer.Name
        local itemName = game.Players.LocalPlayer.Backpack:FindFirstChild(item.Name)
        itemName.Parent = game.Workspace.Living:FindFirstChild(plrName)

        local args = {
            [1] = "EndDialogue",
            [2] = {
                ["NPC"] = "Merchant",
                ["Option"] = "Option2",
                ["Dialogue"] = "Dialogue5"
            }
        }

        game:GetService("Players").LocalPlayer.Character.RemoteEvent:FireServer(unpack(args))
    end

    -- Tự động bắt đầu teleport và bán item ngay khi script chạy
    task.wait(1.5)  -- Đợi 14 giây sau khi game bắt đầu
-- Script Lua cho Roblox để khóa camera ở góc nhìn từ trên xuống

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

-- Đặt độ cao và hướng
local fixedHeight = 700
local cameraOffset = Vector3.new(0, fixedHeight, 0)

-- Hàm cập nhật vị trí camera
local function updateCamera()
    -- Lấy vị trí của người chơi
    local playerCharacter = player.Character
    if playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart") then
        local playerPosition = playerCharacter.HumanoidRootPart.Position
        -- Đặt camera ở vị trí cách người chơi 500 đơn vị theo chiều dọc và nhìn xuống dưới
        camera.CFrame = CFrame.new(playerPosition + cameraOffset, playerPosition)
    end
end

-- Cập nhật camera liên tục
game:GetService("RunService").RenderStepped:Connect(function()
    updateCamera()
end)

    teleportSequentially()
    wait(0.1)
    sell = true    -- Bật bán item khi đầy
    wait(0.5)
    tpOn = true   -- Bật teleport
    while wait() do
    SellItems()
    coroutine.wrap(mainTP)()  -- Bắt đầu teleport tự động
end

coroutine.wrap(QLMOT_fake_script)()

-- Wait until "LoadingScreen1" becomes nil
while game.Players.LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1") ~= nil do
    wait(0.1)  -- Wait for a small amount of time (0.1 seconds) before checking again
end

wait(5)  
local player = game.Players.LocalPlayer  -- hoặc cách khác để xác định player
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local playerStats = LocalPlayer:FindFirstChild("PlayerStats")
local money = playerStats and playerStats:FindFirstChild("Money")
local luckyArrowCount = 0  -- Đếm số Lucky Arrow
local initialMoney = money and money.Value or 0  -- Lưu số tiền ban đầu khi bắt đầu
local moneyEarned = money and money.Value - initialMoney or 0  -- Tránh trường hợp biến 'money' là nil

local imageUrls = {
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313575764280741918/image.png?ex=6750a243&is=674f50c3&hm=3ab8c1ba26cff9c96ec3b29b19659542f317803df53576b2f17afc0ec2085f18&", -- Ví dụ hình ảnh 1
    "https://cdn.discordapp.com/attachments/1304774101772140545/1313546068302233620/image.png?ex=6750869b&is=674f351b&hm=e88a07acd2c5c3920cdafc0fa9eaf7cf9bdf2824445a9f6abd37efbbea93ae70&", -- Ví dụ hình ảnh 2
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313576552335802388/image.png?ex=6750a2ff&is=674f517f&hm=f002ab3b19eaf522c11d09352f280e5ad14790fe689af58f65c58f9cc9307d99&",
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313576826970439741/image.png?ex=6750a340&is=674f51c0&hm=bef744745ecf1087e58ad0948aeff3713d561de65827b1034603270c8465b7c1&",
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313576938677211238/image.png?ex=6750a35b&is=674f51db&hm=5d097734ae2549400a95f2a99a601b64c74631c2439a7d08ddafc98b9bdbfd01&",
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313577167203995739/image.png?ex=6750a391&is=674f5211&hm=a9f7cd0fa9fdc8a6a35e30b19495d4a58cf21df7553af2cd15ed2214b8d0a633&",
    "https://cdn.discordapp.com/attachments/1303015333346676857/1313577759808684133/image.png?ex=6750a41f&is=674f529f&hm=07d81e88b257888e84031045deb8c8b28e2e601421d039c2de900e77aa37accd&"  -- Ví dụ hình ảnh 3
}

local OSTime = os.time()

local url = "https://discord.com/api/webhooks/1313575227715883169/_lhoJW-xTZCUB2vncBE95SyJMyhFHR508kbdTxqrFIQQUHjqS6oXzyx2x7tdAml_R0v4"
local userId = "<@1201114732455788574>"

-- Hàm gửi tin nhắn (message) qua webhook
function SendMessage(url, message)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
    print("Sent")
end

-- Hàm gửi tin nhắn có Embed qua webhook
function SendMessageEMBED(url, embed)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                },
                ["image"] = {
                    ["url"] = embed.imageUrl
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
    print("Sent")
end

-- Hàm để kiểm tra điều kiện và gửi tin nhắn qua webhook
function CheckAndSendWebhook()
    local luckyArrowCount = 0
    local moneyStatus = money and money.Value == 1000000 and "Đầy tiền rồi" or "Chưa đầy"
    local backpack = LocalPlayer:FindFirstChild("Backpack")
    if backpack then
        -- Duyệt qua tất cả các đối tượng trong Backpack
        for _, item in pairs(backpack:GetChildren()) do
            if item.Name == "Lucky Arrow" then
                luckyArrowCount = luckyArrowCount + 1  -- Đếm số Lucky Arrow
            end
        end
    end

    -- Chọn ngẫu nhiên một URL hình ảnh từ danh sách
    local randomImageUrl = imageUrls[math.random(1, #imageUrls)]
    
    -- Kiểm tra số Lucky Arrow
    local fullLuckyArrow = luckyArrowCount >= 9

    -- Tính toán số tiền đã kiếm được
local moneyEarned = money.Value - initialMoney  -- Số tiền kiếm được sau khi đã trừ tiền ban đầu


    if money and luckyArrowCount >= 9 and money.Value == 1000000 then
        -- Nếu đầy đủ tiền và Lucky Arrows
        SendMessage(url, userId)
        local embed = {
            ["title"] = "YBA AUTO FARM SCRIPT",
            ["description"] = "Bảng Thống Kê Số Liệu:",
            ["color"] = 16776960, -- Màu vàng cho thông báo đặc biệt
            ["fields"] = {
                {
                    ["name"] = "Lucky Arrows & Money:",
                    ["value"] = "🤑FULL MONEY & LUCKY ARROW🤑"
                },
                {
                    ["name"] = "Money Earned:",
                    ["value"] = "Số tiền đã kiếm được: " .. moneyEarned
                }
            },
            ["footer"] = {
                ["text"] = "Subin | " .. os.date('%Y-%m-%d %H:%M:%S', OSTime)
            },
            ["imageUrl"] = randomImageUrl
        }
        SendMessageEMBED(url, embed)
        SendMessage(url, userId)
    else
        -- Nếu chưa đủ điều kiện
        local embed = {
            ["title"] = "YBA AUTO FARM SCRIPT",
            ["description"] = "Bảng Thống Kê Số Liệu:",
            ["color"] = 65280,
            ["fields"] = {
                {
                    ["name"] = "Lucky Arrows & Money:",
                    ["value"] = "Lucky Arrows : " .. luckyArrowCount .. "\nMoney : " .. money.Value .. "\nSố tiền trong server nhặt được : " .. moneyEarned
                }
            },
            ["footer"] = {
                ["text"] = "Subin | " .. os.date('%Y-%m-%d %H:%M:%S', OSTime)
            },
            ["imageUrl"] = randomImageUrl
        }
        SendMessageEMBED(url, embed)
    end
end



-- Cài đặt các đối tượng cần thiết
local workspace = game:GetService("Workspace")
local players = game:GetService("Players")

local ignoreItems = {
    "Blue Candy",
    "Red Candy",
    "Yellow Candy",
    "Green Candy"
}

-- Hàm kiểm tra và đếm số lượng vật phẩm hợp lệ
local function countValidItems()
    local validCount = 0
    
    -- Duyệt qua tất cả các vật phẩm trong Items
    for _, item in pairs(workspace.Item_Spawns.Items:GetChildren()) do
        -- Kiểm tra nếu item có ProximityPrompt
        local proximityPrompt = item:FindFirstChild("ProximityPrompt")
        if proximityPrompt then
            -- Kiểm tra ObjectText của ProximityPrompt
            local objectText = proximityPrompt.ObjectText
            if objectText and not table.find(ignoreItems, objectText) then
                validCount = validCount + 1
            end
        end
    end
    
    return validCount
end

-- Hàm teleport sang server khác
local function teleportToAnotherServer()
    game:GetService("TeleportService"):Teleport(1601192056)
end

-- Hàm kiểm tra và teleport nếu cần
local function checkAndTeleport()
    local previousValidCount = countValidItems()
    local waitTime = 4  -- Thời gian chờ 5 giây

    -- Kiểm tra mỗi giây trong vòng 5 giây
    for i = 1, waitTime do
        wait(1)  -- Đợi 1 giây
        local currentValidCount = countValidItems()
        
        -- Nếu số lượng vật phẩm hợp lệ thay đổi trong vòng 5 giây, không teleport
        if currentValidCount ~= previousValidCount then
            return  -- Nếu có thay đổi, thoát hàm và không teleport
        end
    end
    
    -- Nếu không có thay đổi sau 3 giây, teleport
    CheckAndSendWebhook()
    teleportToAnotherServer()
end

-- Vòng lặp chính để kiểm tra và teleport
while true do
    local validItems = countValidItems()
    
    -- Nếu số lượng vật phẩm hợp lệ nhỏ hơn 3 thì kiểm tra và teleport
    if validItems < 3 then
        checkAndTeleport()
    end
    
    -- Đợi một chút trước khi kiểm tra lại
    wait(5)  -- Kiểm tra lại sau 1 giây
end
